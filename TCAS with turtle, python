import turtle
import math
import random
screen = turtle.Screen()
screen.setup(1000, 800)
screen.bgcolor('light steel blue')
screen.title("TCAS Rader")

TCAS_off = False




altitude_display = turtle.Turtle()
altitude_display.hideturtle()
altitude_display.penup()
altitude_display.goto(450, -370)
altitude = 36000
if not TCAS_off :
    altitude_display.write("Altitude = 36000ft", align = 'center', font=('Arial', 20, 'bold'))
alert_active = False
up = False
down = False

def del_all() :
    altitude_display.color("orange")
    my_aircraft.clear()
    alarm.clear()
    draw.clear()
    notice_altitude.color("orange")
    other_aircraft.clear()
    altitude_display.hideturtle()
    my_aircraft.hideturtle()
    alarm.hideturtle()
    draw.hideturtle()
    notice_altitude.hideturtle()
    other_aircraft.hideturtle()

def climb() :
    global altitude
    if alert_active and up:
        altitude += 50
    altitude_display.clear()
    altitude_display.write(f"Altitude: {altitude} ft", align="center", font=("Arial", 16, "bold"))
    screen.ontimer(climb, 100)

def descend() :
    global altitude
    if alert_active and down:
        altitude -= 50
    altitude_display.clear()
    altitude_display.write(f"Altitude: {altitude} ft", align="center", font=("Arial", 16, "bold"))
    screen.ontimer(descend, 100)

def start_climb():
    global up
    up = True

def stop_climb():
    global up
    up = False

def start_descend():
    global down
    down = True

def stop_descend():
    global down
    down = False

screen.listen()
screen.onkeypress(start_climb, 'w')
screen.onkeyrelease(stop_climb, 'w')

screen.listen()
screen.onkeypress(start_descend, 's')
screen.onkeyrelease(stop_descend, 's')

draw = turtle.Turtle()
draw.hideturtle()
draw.pensize(3)
draw.speed(1000)
draw.penup()
draw.goto(0,-250)
for i in range(12) :
    draw.pendown()
    draw.circle(150,15)
    draw.penup()
    draw.circle(150,15)
draw.goto(0,-210)
draw.pensize(10)
for i in range(12) :
    draw.pendown()
    draw.circle(110,0.1)
    draw.penup()
    draw.circle(110,29.9)

draw.penup()
draw.goto(0,-350)
draw.pendown()
for i in range(30) :
    draw.pendown()
    draw.circle(350,1)
    draw.penup()
    draw.circle(350,11)
my_aircraft = turtle.Turtle()
my_aircraft.penup()
my_aircraft.goto(0,-100)
my_aircraft.setheading(90)
my_aircraft.shapesize(6)

angle = random.randint(32,148)
angle_rad = math.radians(angle)
x = 525*math.cos(angle_rad)
y = 525*math.sin(angle_rad)- 100
other_aircraft = turtle.Turtle()
other_aircraft.penup()
other_aircraft.hideturtle()
other_aircraft.goto(x,y)
other_aircraft.setheading(angle+180)
other_aircraft.shape('triangle')
other_aircraft.showturtle()
other_aircraft.color("black","black")
k = random.randint(1,2)
alarm = turtle.Turtle()
alarm.hideturtle()
alarm.penup()
alarm.goto(0,-415)

notice_altitude = turtle.Turtle()
notice_altitude.hideturtle()
notice_altitude.penup()
t = 0
def other_move() :
    global alert_active, t, TCAS_off, d
    other_aircraft.forward(5)
    now_x = other_aircraft.xcor()
    now_y = other_aircraft.ycor()
    d = math.sqrt(now_x ** 2 + (now_y + 100) ** 2)
    notice_altitude.clear()
    notice_altitude.goto(now_x + 15, now_y + 15)
    notice_altitude.write("36000ft", align='center', font=('Arial', 13, 'bold'))
    if t % 2 ==0 :
        notice_altitude.clear()
        notice_altitude.goto(now_x + 15, now_y + 15)
        notice_altitude.write("36000ft", align='center', font=('Arial', 13, 'bold'))
        other_aircraft.clear()
    if not TCAS_off :
        if 100< d <= 150  :
            alert_active = True
            other_aircraft.shapesize(2)
            other_aircraft.color('black','yellow')
            alarm.color('yellow')
            alarm.write("Traffic", align = 'center', font=('Arial', 45, 'bold'))
        elif 10< d <= 100  :
            alert_active = True
            screen.bgcolor('orange')
            other_aircraft.shapesize(2)
            other_aircraft.color("black","red")
            other_aircraft.shape("square")
            alarm.clear()
            alarm.color('red')
            if k == 1:
                alarm.write("Climb", align='center', font=('Arial', 45, 'bold'))
            else:
                alarm.write("Descend", align='center', font=('Arial', 45, 'bold'))
        elif d <= 10:
            if k == 1:
                if 35000 <altitude < 37000:
                    TCAS_off = True
                    del_all()
                    turtle11 = turtle.Turtle()
                    turtle11.hideturtle()
                    turtle11.color("red")
                    turtle11.write("Crash!", align='center', font=('Arial', 250, 'bold'))
                elif altitude <= 35000 :
                    TCAS_off = True
                    del_all()
                    turtle11 = turtle.Turtle()
                    turtle11.hideturtle()
                    turtle11.color("red")
                    turtle11.write("You Didn't Follow TCAS!",align='center', font=('Arial', 90, 'bold'))
                else:
                    alarm.clear()
                    alert_active = False
                    screen.bgcolor('light steel blue')
                    TCAS_off = True
                    other_aircraft.shapesize(2)
                    other_aircraft.color("black")
                    other_aircraft.shape("triangle")
            elif k == 2:
                if 37000 >altitude > 35000:
                    del_all()
                    TCAS_off = True
                    turtle11 = turtle.Turtle()
                    turtle11.hideturtle()
                    turtle11.color("red")
                    turtle11.write("Crash!", align='center', font=('Arial', 250, 'bold'))
                elif altitude >= 37000 :
                    del_all()
                    turtle11 = turtle.Turtle()
                    turtle11.hideturtle()
                    turtle11.color("red")
                    turtle11.write("You Didn't Follow TCAS!", align='center', font=('Arial', 90, 'bold'))
                else:
                    alarm.clear()
                    alert_active = False
                    screen.bgcolor('light steel blue')
                    TCAS_off = True
                    other_aircraft.shapesize(2)
                    other_aircraft.color("black")
                    other_aircraft.shape("triangle")
    else:
        alert_active = False
        other_aircraft.shapesize(1)
        other_aircraft.color('black', 'black')
        other_aircraft.shape('triangle')
        alarm.clear()

    t += 1
    screen.ontimer(other_move, 50)
if not TCAS_off:
    climb()
    descend()
other_move()
turtle.done()
